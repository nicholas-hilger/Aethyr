<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-6</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>move = 0
moveTime = 0
mode = 0
loss = 0
spd = 1
aggro = 0
stuck = 0
poizn = 0
bld = 0
canHurt= 15
ranged=  0
sp = 1.5
attMethod = 0

if(room != tutorial)
{
pos = 1
xx = path_get_point_x(global.path,pos)
yy = path_get_point_y(global.path,pos)
}
else
{
pos = 1
xx = x
yy = y
}

wait = 0
waitTime = 0

recalc = irandom(30) + 5
recalcT = 0

jiggle = 0
crit = 0
collider = 1
chase = 0
image_speed = 0.1
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(player.runeName = "Amplified Aethyr") drop *= 2
drop *= player.comboWorth

drop = round(drop)

global.aethyr += drop
global.aethyrCollected += drop
with(player)
{
aethGained += other.drop
aethShow = 120
}

for(i = 0; i &lt; drop/10; i++) instance_create(x,y,aeth)

repeat(irandom(10)) instance_create(x,y,blood)

global.kills++

ru = irandom(99) + 1

if(ru &lt; 2) instance_create(x,y,runePar)

if(global.gibsOn and gibInd != s_bloaterGibs)
{
for(i = 0; i &lt; sprite_get_number(gibInd);i++)
{
with(instance_create(x+irandom(4) -2,y+irandom(4) -2,gibs))
{
sprite_index = other.gibInd
image_index = other.i
}
}
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(global.paused or player.dead)
{
motion_set(0,0)
path_end()
image_speed = 0
exit
}
else 
{
if(chase) image_speed = 0.1
else if(!chase) image_index = 0
}
if(attSpd - attTime &lt; 30) attTime++
if(moveTime &gt; 0 and !mode) moveTime--
if(moveTime &lt; 0 and !mode) moveTime++
if hp &lt;= 0
{
instance_destroy()
}
if(point_distance(x,y,player.x,player.y) &lt;= 300 and point_distance(x,y,player.x,player.y) &gt;= attRng and recalcT &lt; recalc and !jiggle and !stuck and chaser)
{
chase = 1
fx = player.x + irandom(32) - 16
fy = player.y + irandom(32) - 16
if(point_distance(x,y,xx,yy) &lt; 6)
{
pos++
if(pos = path_get_number(global.path)) path_end()
else
{
xx = path_get_point_x(global.path,pos)
yy = path_get_point_y(global.path,pos)
}
}
mp_potential_step(fx,fy,sp,0)
recalcT = 0
recalc = irandom(30) + 5
}
if(point_distance(x,y,player.x,player.y) &lt;= attRng and !jiggle) 
{
attTime++
motion_set(0,0)
}
if(attTime &gt;= attSpd and !ranged and attMethod != 0)
{
with(instance_create(x,y,attMethod))
{
att = other.att
mAtt = other.att
crit = other.crit
}
attTime = 0
}


if(stuck &gt; 0)
{
stuck--
path_end()
}

if(poizn &gt; 0 and poizn%60 = 0) 
{
hp -= irandom(player.att) + 2
}
if(bld &gt; 0 and bld%60 = 0) 
{
hp -= irandom(player.att) + 4
}
canHurt++
bld--
poizn--
if(point_distance(x,y,player.x,player.y) &lt; 64 and player.runeName = "Thorns") hp -= round(player.att/5) / 10

//mp_grid_clear_all(path)



recalcT++

if(recalcT &gt; recalc) recalcT = 0

if(jiggle = 10)
{
motion_set(dir,0.5)
}

if(jiggle &gt; 0) jiggle--

if(jiggle = 1) motion_set(0,0)
if(place_meeting(x,y,wall)) move_bounce_solid(true)

if(canHurt &gt; 10)
{
if(curHp &gt; hp + 9) curHp -= 10
else if(curHp &gt; hp + 4) curHp -= 5
else if(curHp &gt; hp + 1) curHp -= 2
else if(curHp &gt; hp) curHp--
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="aeth">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>getOff(player,id)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(hp &lt; round(mHp) and hp &gt;= 0)
{
draw_sprite(s_enHpBack,0,x,y-20)
draw_sprite_ext(s_enHp,0,x,y-20,curHp/mHp,1,0,c_yellow,1)
draw_sprite_ext(s_enHp,0,x,y-20,hp/mHp,1,0,c_red,1)
}
draw_set_font(hurtFont)
//drawOutline(x,y-64,string(recalc))
//drawOutline(x,y-32,string(recalcT))
if(attSpd - attTime &lt; 30) image_index = (image_number-1)
else if(image_index = (image_number-1)) image_index = 0
if(player.x &lt; x) image_xscale = -1
else image_xscale = 1
if(canHurt &lt; 15) image_blend = c_red
else image_blend = c_white
draw_sprite_ext(sprite_index,image_index,x,y,image_xscale,1,0,image_blend,1)
draw_self()

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
